{
  "openapi": "3.0.0",
  "info": {
    "title": "Merkle Tree API",
    "version": "1.0.0",
    "description": "API for Merkle tree operations"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/v1/merkle/root": {
      "post": {
        "summary": "Calculate Merkle root and store proofs",
        "description": "Calculates Merkle root for given data and stores proofs in Redis.\n\nExample request:\n```json\n{\n  \"data\": [\n    \"(1,1111)\",\n    \"(2,2222)\",\n    \"(3,3333)\",\n    \"(4,4444)\",\n    \"(5,5555)\",\n    \"(6,6666)\",\n    \"(7,7777)\",\n    \"(8,8888)\"\n  ]\n}\n```\n\nExample response:\n```json\n{\n  \"success\": true,\n  \"data\": {\n    \"root_id\": \"0x...\",\n    \"epoch\": 1234567890\n  }\n}\n```\n",
        "tags": [
          "Merkle"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of data strings in format \"(userId,balance)\"",
                    "example": [
                      "(1,1111)",
                      "(2,2222)",
                      "(3,3333)",
                      "(4,4444)",
                      "(5,5555)",
                      "(6,6666)",
                      "(7,7777)",
                      "(8,8888)"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully calculated Merkle root",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "root_id": {
                          "type": "string"
                        },
                        "epoch": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}